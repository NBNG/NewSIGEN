/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sigen.Interfaces;

import br.com.sigen.Modelo.Chapa;
import br.com.sigen.Modelo.Letra;
import br.com.sigen.Modelo.Quadra;
import br.com.sigen.dao.DAO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import org.hibernate.exception.ConstraintViolationException;

/**
 *
 * @author matteus
 */
public class CadastrarTumulo extends javax.swing.JInternalFrame {

    DAO<Quadra> quadradao;
    DAO<Letra> letradao;
    DAO<Chapa> chapadao;
    Quadra quadra = new Quadra();
    Letra letra = new Letra();
    Chapa chapa = new Chapa();
    String novaQuadra;
    String novaLetra;
    List<Quadra> listaQuadra;
    List<Letra> listaLetra;
    String vetor[];
    JDesktopPane painel;

    public CadastrarTumulo(JDesktopPane painel) {
        super("SIGEN - Cadastrar Túmulos");
        DAO<Quadra> daoQuadra = new DAO<>(Quadra.class);
        listaQuadra = daoQuadra.listaTodos();
        vetor = new String[listaQuadra.size()];
        for (int i = 0; i < listaQuadra.size(); i++) {
            vetor[i] = listaQuadra.get(i).getQuadra();
        }
        daoQuadra.close();
        initComponents();
        this.painel = painel;
        daoQuadra.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLEmpresa = new javax.swing.JLabel();
        jLVersao = new javax.swing.JLabel();
        jBCadastrar = new javax.swing.JButton();
        jTChapa = new javax.swing.JTextField();
        jTNovo = new javax.swing.JTextField();
        jCBQuadra = new javax.swing.JComboBox();
        jBConfirmar = new javax.swing.JButton();
        jCBLetra = new javax.swing.JComboBox();
        jRBLetra = new javax.swing.JRadioButton();
        jRBQuadra = new javax.swing.JRadioButton();
        jLCabecalho = new javax.swing.JLabel();
        jLEmpresa1 = new javax.swing.JLabel();
        jLVersao1 = new javax.swing.JLabel();
        jLChapa = new javax.swing.JLabel();

        jLEmpresa.setText("NBNG. Todos os direitos reservados.");

        jLVersao.setText("Versão: 1.4.6");

        setClosable(true);

        jBCadastrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sigen/Imagens/salvar.png"))); // NOI18N
        jBCadastrar.setText("Cadastrar");
        jBCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadastrarActionPerformed(evt);
            }
        });

        jTChapa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTNovo.setEditable(false);
        jTNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTNovo.setText("Insira aqui...");

        jCBQuadra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCBQuadra.setModel(new javax.swing.DefaultComboBoxModel(vetor));
        jCBQuadra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBQuadraActionPerformed(evt);
            }
        });
        jCBQuadra.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCBQuadraPropertyChange(evt);
            }
        });

        jBConfirmar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sigen/Imagens/salvar.png"))); // NOI18N
        jBConfirmar.setText("Confirmar");
        jBConfirmar.setEnabled(false);
        jBConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfirmarActionPerformed(evt);
            }
        });

        jCBLetra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRBLetra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRBLetra.setText("Nova Letra");
        jRBLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBLetraActionPerformed(evt);
            }
        });

        jRBQuadra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jRBQuadra.setText("Nova Quadra");
        jRBQuadra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBQuadraActionPerformed(evt);
            }
        });

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Cadastrar Túmulo");

        jLEmpresa1.setText("NBNG. Todos os direitos reservados.");

        jLVersao1.setText("Versão: 1.4.6");

        jLChapa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLChapa.setText("Chapa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLCabecalho))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jRBQuadra)
                .addGap(26, 26, 26)
                .addComponent(jCBQuadra, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jRBLetra)
                .addGap(44, 44, 44)
                .addComponent(jCBLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jBCadastrar))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLEmpresa1)
                .addGap(111, 111, 111)
                .addComponent(jLVersao1))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(43, 43, 43)
                    .addComponent(jBConfirmar)
                    .addGap(18, 18, 18)
                    .addComponent(jTNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(jLChapa)
                    .addGap(34, 34, 34)
                    .addComponent(jTChapa, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLCabecalho)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBQuadra)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jCBQuadra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBLetra)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jCBLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLChapa)
                    .addComponent(jTChapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConfirmar)
                    .addComponent(jTNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jBCadastrar)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLEmpresa1)
                    .addComponent(jLVersao1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadastrarActionPerformed
        String aux = jTChapa.getText();
        chapadao = new DAO<>(Chapa.class);
        if (aux.length() > 0) {
            try {
                letra = listaLetra.get(jCBLetra.getSelectedIndex());
                chapa.setLetra(letra);
                chapa.setChapa(aux);
                chapadao.adicionar(chapa);
                JOptionPane.showMessageDialog(this, "Chapa"
                        + " adicionado com sucesso!", "Activity Performed "
                        + "Successfully", JOptionPane.INFORMATION_MESSAGE);
                limpar();
            } catch (ConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Chapa"
                        + " já cadastrada!",
                        "ERROR 404 - Content not found!",
                        JOptionPane.ERROR_MESSAGE);
                limpar();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Campos"
                    + " obrigatórios (*) vazios e/ou Informação inválida!",
                    "ERROR 404 - Content not found!",
                    JOptionPane.ERROR_MESSAGE);
        }
        chapadao.close();
    }//GEN-LAST:event_jBCadastrarActionPerformed

    /*ao selecionar uma quadra, todas as letras relacionadas à aquela quadra
      serão carregadas no combo box de letra
    */
    private void jCBQuadraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBQuadraActionPerformed
        letradao = new DAO<>(Letra.class);
        jCBLetra.removeAllItems();
        List<Object[]> lista = letradao.
                buscaAvançada(montaQuery((String) jCBQuadra.getSelectedItem()));
        listaLetra = new ArrayList<Letra>();

        for (int i = 0; i < lista.size(); i++) {
            Object[] resultado = lista.get(i);
            listaLetra.add((Letra) resultado[0]);
            jCBLetra.addItem(listaLetra.get(i).getLetra());
        }
        letradao.close();
    }//GEN-LAST:event_jCBQuadraActionPerformed

    /*ao selecionar uma quadra, todas as letras relacionadas à aquela quadra
      serão carregadas no combo box de letra
    */
    private void jCBQuadraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCBQuadraPropertyChange
        letradao = new DAO<>(Letra.class);
        List<Object[]> lista = letradao.
                buscaAvançada(montaQuery((String) jCBQuadra.getSelectedItem()));
        listaLetra = new ArrayList<Letra>();

        jCBLetra.removeAllItems();

        for (int i = 0; i < lista.size(); i++) {
            Object[] resultado = lista.get(i);
            listaLetra.add((Letra) resultado[0]);
            jCBLetra.addItem(listaLetra.get(i).getLetra());
        }
        letradao.close();
    }//GEN-LAST:event_jCBQuadraPropertyChange

    private void jBConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfirmarActionPerformed
        String aux = jTNovo.getText();
        quadradao = new DAO<>(Quadra.class);
        letradao = new DAO<>(Letra.class);
        if (jRBQuadra.isSelected()) {
            if (aux.length() > 0) {
                try {
                    quadra.setQuadra(aux);
                    quadradao.adicionar(quadra);
                    JOptionPane.showMessageDialog(this, "Quadra"
                            + " adicionado com sucesso!", "Activity Performed "
                            + "Successfully", JOptionPane.INFORMATION_MESSAGE);
                    limpar();
                } catch (ConstraintViolationException ex) {
                    JOptionPane.showMessageDialog(this, "Quadra"
                            + " já cadastrada!",
                            "ERROR 404 - Content not found!",
                            JOptionPane.ERROR_MESSAGE);
                    quadradao.close();
                    quadradao = new DAO<>(Quadra.class);
                    
                    jRBQuadra.setSelected(false);
                    jTNovo.setText("Insira aqui...");
                    jTNovo.setEditable(false);
                    jBConfirmar.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Campos"
                        + " obrigatórios (*) vazios e/ou Informação inválida!",
                        "ERROR 404 - Content not found!",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else if (jRBLetra.isSelected()) {
            if (aux.length() > 0) {
                try {
                    quadra = listaQuadra.get(jCBQuadra.getSelectedIndex());
                    letra.setLetra(aux);
                    letra.setQuadra(quadra);
                    letradao.adicionar(letra);
                    JOptionPane.showMessageDialog(this, "Letra"
                            + " adicionado com sucesso!", "Activity Performed "
                            + "Successfully", JOptionPane.INFORMATION_MESSAGE);
                    limpar();
                } catch (ConstraintViolationException ex) {
                    JOptionPane.showMessageDialog(this, "Letra"
                            + " já cadastrada!",
                            "ERROR 404 - Content not found!",
                            JOptionPane.ERROR_MESSAGE);
                    quadradao.close();
                    quadradao = new DAO<>(Quadra.class);

                    jRBLetra.setSelected(false);
                    jTNovo.setText("Insira aqui...");
                    jTNovo.setEditable(false);
                    jBConfirmar.setEnabled(false);

                }
            } else {
                JOptionPane.showMessageDialog(this, "Campos"
                        + " obrigatórios (*) vazios e/ou Informação inválida!",
                        "ERROR 404 - Content not found!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        quadradao.close();
        letradao.close();
    }//GEN-LAST:event_jBConfirmarActionPerformed

    private void jRBLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBLetraActionPerformed
        if (jRBLetra.isSelected()) {
            jTNovo.setEditable(true);
            jTNovo.setText("");
            jBConfirmar.setEnabled(true);
            jRBQuadra.setSelected(false);
        } else {
            jTNovo.setText("Insira aqui...");
            jTNovo.setEditable(false);
            jBConfirmar.setEnabled(false);
        }
    }//GEN-LAST:event_jRBLetraActionPerformed
    
    private void jRBQuadraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBQuadraActionPerformed
        if (jRBQuadra.isSelected()) {
            jTNovo.setEditable(true);
            jTNovo.setText("");
            jBConfirmar.setEnabled(true);
            jRBLetra.setSelected(false);
        } else {
            jTNovo.setText("Insira aqui...");
            jTNovo.setEditable(false);
            jBConfirmar.setEnabled(false);
        }
    }//GEN-LAST:event_jRBQuadraActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCadastrar;
    private javax.swing.JButton jBConfirmar;
    private javax.swing.JComboBox jCBLetra;
    private javax.swing.JComboBox jCBQuadra;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLChapa;
    private javax.swing.JLabel jLEmpresa;
    private javax.swing.JLabel jLEmpresa1;
    private javax.swing.JLabel jLVersao;
    private javax.swing.JLabel jLVersao1;
    private javax.swing.JRadioButton jRBLetra;
    private javax.swing.JRadioButton jRBQuadra;
    private javax.swing.JTextField jTChapa;
    private javax.swing.JTextField jTNovo;
    // End of variables declaration//GEN-END:variables
  
    /*Retorna a query responsavel por trazer todas as letras pertencentes
    a uma quadra
    */
    private String montaQuery(String quadra) {
        return "FROM Letra letra INNER JOIN letra.quadra as quadra "
                + "WHERE quadra.quadra = '" + quadra + "'";
    }

    private void limpar() {
        CadastrarTumulo ct = new CadastrarTumulo(painel);
        painel.add(ct);
        this.dispose();
        ct.show();

    }
}
