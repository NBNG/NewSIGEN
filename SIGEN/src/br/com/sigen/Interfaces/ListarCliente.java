package br.com.sigen.Interfaces;

import br.com.sigen.Dao.PessoaDAO;
import br.com.sigen.Modelo.Pessoa;
import br.com.sigen.dao.DAO;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author user
 */
public class ListarCliente extends javax.swing.JInternalFrame {

    DAO<Pessoa> dao = new DAO<>(Pessoa.class);
    PessoaDAO cdao = new PessoaDAO();
    Pessoa cliente;
    String endereco;
    //List de uma classe do modelo para utilização na tabela;
    List<Pessoa> clientes;
    //definição das colunas da tabela
    DefaultTableModel tmCliente = new DefaultTableModel(null, new String[]{
        "Nome", "CPF", "RG", "Telefone", "Celular", "Email", "Endereço"}) {
        boolean[] canEdit = new boolean[]{
            false, false, false, false, false, false, false
        };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    public ListarCliente() throws ParseException {
        super("SIGEN - Listagem de Proprietários");
        initComponents();
        MaskFormatter maskCPF = new MaskFormatter("###.###.###-##");
        maskCPF.install(jFTCPF);
        tabela.setRowHeight(23);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLCabecalho = new javax.swing.JLabel();
        jTNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLNome = new javax.swing.JLabel();
        jFTCPF = new javax.swing.JFormattedTextField();
        jBPesquisar = new javax.swing.JButton();
        jLEmpresa = new javax.swing.JLabel();
        jLVersao = new javax.swing.JLabel();
        jLCPF = new javax.swing.JLabel();

        setClosable(true);

        jLCabecalho.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLCabecalho.setText("Listagem de Proprietários");

        jTNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTNomeKeyTyped(evt);
            }
        });

        tabela.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabela.setModel(tmCliente);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jLNome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLNome.setText("Nome:");

        jFTCPF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jBPesquisar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/sigen/Imagens/pesquisar.png"))); // NOI18N
        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jLEmpresa.setText("NBNG. Todos os direitos reservados.");

        jLVersao.setText("Versão: 1.4.6");

        jLCPF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLCPF.setText("CPF:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 934, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLCabecalho)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLNome)
                            .addComponent(jLCPF))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jFTCPF)
                                .addGap(18, 18, 18)
                                .addComponent(jBPesquisar))
                            .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(135, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLVersao))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCabecalho)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFTCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar)
                    .addComponent(jLCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLNome))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLVersao)
                    .addComponent(jLEmpresa)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNomeKeyTyped
        jFTCPF.setText("");

        while (tmCliente.getRowCount() > 0) {
            tmCliente.removeRow(0);
        }

        clientes = dao.buscaPorNome(jTNome.getText());

        for (int i = 0; i < clientes.size(); i++) {
            /*endereco = clientes.get(i).getLogradouro() + " " + clientes.get(i).
                    getNumero() + ", " + clientes.get(i).getBairro() + " - "
                    + clientes.get(i).getCidade() + "/" + clientes.get(i).
                    getEstado() + " - CEP: " + clientes.get(i).getCep() + "("
                    + clientes.get(i).getComplemento() + ")";*/
            tmCliente.addRow(new String[]{null, null, null, null});
            tmCliente.setValueAt(clientes.get(i).getNome(), i, 0);
            tmCliente.setValueAt(clientes.get(i).getCpf(), i, 1);
            tmCliente.setValueAt(clientes.get(i).getRg(), i, 2);
            tmCliente.setValueAt(clientes.get(i).getTelefone(), i, 3);
            tmCliente.setValueAt(clientes.get(i).getCelular(), i, 4);
            tmCliente.setValueAt(clientes.get(i).getEmail(), i, 5);
            tmCliente.setValueAt(endereco, i, 6);
        }
    }//GEN-LAST:event_jTNomeKeyTyped

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        if (!jFTCPF.getText().equals("   .   .   -  ")) {
            jTNome.setText("");

            while (tmCliente.getRowCount() > 0) {
                tmCliente.removeRow(0);
            }

            clientes = new ArrayList<>();

            cliente = (Pessoa) cdao.buscaPorCNPJ(jFTCPF.getText());
            clientes.add(cliente);

            /*endereco = cliente.getLogradouro() + " " + cliente.getNumero()
                    + ", " + cliente.getBairro() + " - " + cliente.getCidade()
                    + "/" + cliente.getEstado() + " - CEP: " + cliente.getCep()
                    + "(" + cliente.getComplemento() + ")";*/
            tmCliente.addRow(new String[]{null, null, null, null});
            tmCliente.setValueAt(cliente.getNome(), 0, 0);
            tmCliente.setValueAt(cliente.getCpf(), 0, 1);
            tmCliente.setValueAt(cliente.getRg(), 0, 2);
            tmCliente.setValueAt(cliente.getTelefone(), 0, 3);
            tmCliente.setValueAt(cliente.getCelular(), 0, 4);
            tmCliente.setValueAt(cliente.getEmail(), 0, 5);
            tmCliente.setValueAt(endereco, 0, 6);
        } else {
            JOptionPane.showMessageDialog(this, "Favor preencher um CPF!", "ERROR 404 - Content not found!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        if (evt.getButton() != evt.BUTTON3 && evt.getClickCount() == 2) {
            try {
                AtualizaCliente ac = new AtualizaCliente(clientes.get(tabela.getSelectedRow()));
                ac.setVisible(true);
            } catch (ParseException ex) {
                Logger.getLogger(ListarCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tabelaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JFormattedTextField jFTCPF;
    private javax.swing.JLabel jLCPF;
    private javax.swing.JLabel jLCabecalho;
    private javax.swing.JLabel jLEmpresa;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLVersao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
